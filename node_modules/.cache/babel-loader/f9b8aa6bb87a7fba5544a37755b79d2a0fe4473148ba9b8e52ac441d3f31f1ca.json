{"ast":null,"code":"var _jsxFileName = \"/Users/kangdong-o/Downloads/Loa-Project-a5ab3ac3b87cdd4d3c75cc1cc73d79ccbb4e81eb/src/components/notice/index.js\",\n  _s = $RefreshSig$();\nimport { useEffect, useState } from 'react';\nimport axiosDefault from '../../config/axios';\nimport { Link } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Notice = () => {\n  _s();\n  const [noticeList, setNewsList] = useState(null);\n  useEffect(() => {\n    const fetchNewsData = async () => {\n      try {\n        const response = await axiosDefault.get(`/news/notices`);\n        return response.data;\n      } catch (error) {\n        throw error.response;\n      }\n    };\n    fetchNewsData().then(response => setNewsList(response.slice(0, 6))).catch(error => {\n      switch (error.status) {\n        case 503:\n          setNewsList([{\n            Title: '로스트아크 게임이 점검중입니다',\n            Date: new Date().toISOString().slice(0, 10),\n            Type: '공지'\n          }]);\n          break;\n        default:\n          console.log(error);\n      }\n    });\n  }, []);\n  const dateFormat = dateTime => dateTime.slice(0, 10).replaceAll('-', '.');\n  const noticeTypeFormat = noticeType => {\n    switch (noticeType) {\n      case '공지':\n        return 'type-notice';\n      case '상품':\n        return 'type-shop';\n      case '점검':\n        return 'type-check';\n      case '이벤트':\n        return 'type-event';\n      default:\n        break;\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"section\", {\n    id: \"notice\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"notice-inner\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"\\uB85C\\uC2A4\\uD2B8\\uC544\\uD06C \\uACF5\\uC9C0\\uC0AC\\uD56D\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        className: \"notice-list\",\n        children: noticeList === null || noticeList === void 0 ? void 0 : noticeList.map((notice, idx) => {\n          return /*#__PURE__*/_jsxDEV(\"li\", {\n            children: /*#__PURE__*/_jsxDEV(Link, {\n              to: notice.Link,\n              target: \"_blank\",\n              title: \"\\uC0C8 \\uD0ED\\uC73C\\uB85C \\uC5F4\\uAE30\",\n              children: [/*#__PURE__*/_jsxDEV(\"p\", {\n                className: \"title\",\n                children: notice.Title\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 65,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                className: \"date\",\n                children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                  className: ['type', noticeTypeFormat(notice.Type)].join(' '),\n                  children: notice.Type\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 67,\n                  columnNumber: 41\n                }, this), dateFormat(notice.Date)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 66,\n                columnNumber: 37\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 60,\n              columnNumber: 33\n            }, this)\n          }, `news_${idx}`, false, {\n            fileName: _jsxFileName,\n            lineNumber: 59,\n            columnNumber: 29\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 53,\n    columnNumber: 9\n  }, this);\n};\n_s(Notice, \"GyNOIV91ifcR0jXmCER3Kn6wNME=\");\n_c = Notice;\nexport default Notice;\nvar _c;\n$RefreshReg$(_c, \"Notice\");","map":{"version":3,"names":["useEffect","useState","axiosDefault","Link","jsxDEV","_jsxDEV","Notice","_s","noticeList","setNewsList","fetchNewsData","response","get","data","error","then","slice","catch","status","Title","Date","toISOString","Type","console","log","dateFormat","dateTime","replaceAll","noticeTypeFormat","noticeType","id","children","className","fileName","_jsxFileName","lineNumber","columnNumber","map","notice","idx","to","target","title","join","_c","$RefreshReg$"],"sources":["/Users/kangdong-o/Downloads/Loa-Project-a5ab3ac3b87cdd4d3c75cc1cc73d79ccbb4e81eb/src/components/notice/index.js"],"sourcesContent":["import { useEffect, useState } from 'react'\nimport axiosDefault from '../../config/axios'\nimport { Link } from 'react-router-dom'\n\nconst Notice = () => {\n    const [noticeList, setNewsList] = useState(null)\n\n    useEffect(() => {\n        const fetchNewsData = async () => {\n            try {\n                const response = await axiosDefault.get(`/news/notices`)\n                return response.data\n            } catch (error) {\n                throw error.response\n            }\n        }\n        fetchNewsData()\n            .then((response) => setNewsList(response.slice(0, 6)))\n            .catch((error) => {\n                switch (error.status) {\n                    case 503:\n                        setNewsList([\n                            {\n                                Title: '로스트아크 게임이 점검중입니다',\n                                Date: new Date().toISOString().slice(0, 10),\n                                Type: '공지',\n                            },\n                        ])\n                        break\n                    default:\n                        console.log(error)\n                }\n            })\n    }, [])\n\n    const dateFormat = (dateTime) => dateTime.slice(0, 10).replaceAll('-', '.')\n    const noticeTypeFormat = (noticeType) => {\n        switch (noticeType) {\n            case '공지':\n                return 'type-notice'\n            case '상품':\n                return 'type-shop'\n            case '점검':\n                return 'type-check'\n            case '이벤트':\n                return 'type-event'\n            default:\n                break\n        }\n    }\n\n    return (\n        <section id=\"notice\">\n            <div className=\"notice-inner\">\n                <h3>로스트아크 공지사항</h3>\n                <ul className=\"notice-list\">\n                    {noticeList?.map((notice, idx) => {\n                        return (\n                            <li key={`news_${idx}`}>\n                                <Link\n                                    to={notice.Link}\n                                    target=\"_blank\"\n                                    title=\"새 탭으로 열기\"\n                                >\n                                    <p className=\"title\">{notice.Title}</p>\n                                    <p className=\"date\">\n                                        <span\n                                            className={[\n                                                'type',\n                                                noticeTypeFormat(notice.Type),\n                                            ].join(' ')}\n                                        >\n                                            {notice.Type}\n                                        </span>\n                                        {dateFormat(notice.Date)}\n                                    </p>\n                                </Link>\n                            </li>\n                        )\n                    })}\n                </ul>\n            </div>\n        </section>\n    )\n}\n\nexport default Notice\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}