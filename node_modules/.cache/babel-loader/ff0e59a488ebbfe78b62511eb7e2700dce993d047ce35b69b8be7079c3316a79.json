{"ast":null,"code":"import{useState,useEffect}from'react';import axiosDefault from'../../config/axios';import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";const Island=()=>{const[islandData,setIslandData]=useState(null);const today=new Date().toISOString().split('T')[0];useEffect(()=>{const fetchData=async()=>{try{const response=await axiosDefault.get(\"/gamecontents/calendar\");console.log(response.data);// API 응답 확인\nreturn response.data;}catch(error){console.error(error);// 오류 출력\nthrow error.response;}};fetchData().then(response=>setIslandData(response)).catch(error=>{console.error('error: ',error);});},[]);const processedData=islandData===null||islandData===void 0?void 0:islandData.filter(schedule=>{const startDates=schedule.StartTimes.map(time=>time.split('T')[0]);return startDates.includes(today)&&schedule.CategoryName==='모험 섬';});return/*#__PURE__*/_jsx(\"section\",{children:/*#__PURE__*/_jsxs(\"div\",{className:\"island-inner\",children:[/*#__PURE__*/_jsx(\"h3\",{children:\"\\uC624\\uB298\\uC758 \\uBAA8\\uD5D8 \\uC12C\"}),/*#__PURE__*/_jsx(\"div\",{className:\"island-list\",children:processedData&&processedData.length>0?processedData.map((island,idx)=>/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsxs(\"div\",{className:\"island-info\",children:[/*#__PURE__*/_jsx(\"img\",{src:island.ContentsIcon,alt:\"\".concat(island.ContentsName,\" \\uC774\\uBBF8\\uC9C0\")}),/*#__PURE__*/_jsx(\"p\",{className:\"title\",children:island.ContentsName})]}),/*#__PURE__*/_jsx(\"div\",{className:\"island-time\",children:island.StartTimes.filter(time=>time.split('T')[0]===today).map((time,idx)=>/*#__PURE__*/_jsx(\"p\",{className:new Date(time)<new Date()?'over':'',children:time.split('T')[1].slice(0,5)},\"time_\".concat(idx)))})]},\"island_\".concat(idx))):/*#__PURE__*/_jsx(\"p\",{children:\"\\uC624\\uB298\\uC758 \\uBAA8\\uD5D8 \\uC12C \\uC815\\uBCF4\\uAC00 \\uC5C6\\uC2B5\\uB2C8\\uB2E4.\"})})]})});};export default Island;","map":{"version":3,"names":["useState","useEffect","axiosDefault","jsx","_jsx","jsxs","_jsxs","Island","islandData","setIslandData","today","Date","toISOString","split","fetchData","response","get","console","log","data","error","then","catch","processedData","filter","schedule","startDates","StartTimes","map","time","includes","CategoryName","children","className","length","island","idx","src","ContentsIcon","alt","concat","ContentsName","slice"],"sources":["/Users/kangdong-o/Downloads/Loa-Project-a5ab3ac3b87cdd4d3c75cc1cc73d79ccbb4e81eb/src/components/island/index.js"],"sourcesContent":["import { useState, useEffect } from 'react'\nimport axiosDefault from '../../config/axios'\n\nconst Island = () => {\n    const [islandData, setIslandData] = useState(null)\n    const today = new Date().toISOString().split('T')[0]\n\n    useEffect(() => {\n        const fetchData = async () => {\n            try {\n                const response = await axiosDefault.get(\n                    `/gamecontents/calendar`\n                )\n                console.log(response.data) // API 응답 확인\n                return response.data\n            } catch (error) {\n                console.error(error) // 오류 출력\n                throw error.response\n            }\n        }\n\n        fetchData()\n            .then((response) => setIslandData(response))\n            .catch((error) => {\n                console.error('error: ', error)\n            })\n    }, [])\n\n    const processedData = islandData?.filter((schedule) => {\n        const startDates = schedule.StartTimes.map((time) => time.split('T')[0])\n        return startDates.includes(today) && schedule.CategoryName === '모험 섬'\n    })\n\n    return (\n        <section>\n            <div className=\"island-inner\">\n                <h3>오늘의 모험 섬</h3>\n                <div className=\"island-list\">\n                    {processedData && processedData.length > 0 ? (\n                        processedData.map((island, idx) => (\n                            <div key={`island_${idx}`}>\n                                <div className=\"island-info\">\n                                    <img\n                                        src={island.ContentsIcon}\n                                        alt={`${island.ContentsName} 이미지`}\n                                    />\n                                    <p className=\"title\">\n                                        {island.ContentsName}\n                                    </p>\n                                </div>\n                                <div className=\"island-time\">\n                                    {island.StartTimes.filter(\n                                        (time) => time.split('T')[0] === today\n                                    ).map((time, idx) => (\n                                        <p\n                                            key={`time_${idx}`}\n                                            className={\n                                                new Date(time) < new Date()\n                                                    ? 'over'\n                                                    : ''\n                                            }\n                                        >\n                                            {time.split('T')[1].slice(0, 5)}\n                                        </p>\n                                    ))}\n                                </div>\n                            </div>\n                        ))\n                    ) : (\n                        <p>오늘의 모험 섬 정보가 없습니다.</p>\n                    )}\n                </div>\n            </div>\n        </section>\n    )\n}\n\nexport default Island\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}