{"ast":null,"code":"import { createAsyncThunk, createSlice } from '@reduxjs/toolkit';\nimport axiosDefault from '../config/axios';\nexport const getCharacter = createAsyncThunk('user/getCharacter', async (characterId, {\n  rejectWithValue\n}) => {\n  try {\n    const response = await axiosDefault.get(`/armories/characters/${characterId}`);\n    return response.data;\n  } catch (error) {\n    if (!error.response) {\n      throw error.message; // Network error 에러메시지가 없으므로 네트워크 에러\n    }\n    return rejectWithValue(error.response); // Server error\n  }\n});\nexport const characterSlice = createSlice({\n  name: 'character',\n  initialState: {\n    characterProfile: {}\n  },\n  extraReducers: builder => {\n    builder.addCase(getCharacter.fulfilled, (state, action) => {\n      state.characterProfile = action.payload;\n    });\n  }\n});\nexport default characterSlice.reducer;","map":{"version":3,"names":["createAsyncThunk","createSlice","axiosDefault","getCharacter","characterId","rejectWithValue","response","get","data","error","message","characterSlice","name","initialState","characterProfile","extraReducers","builder","addCase","fulfilled","state","action","payload","reducer"],"sources":["/Users/kangdong-o/Desktop/Project/loa-project/src/store/characterSlice.js"],"sourcesContent":["import { createAsyncThunk, createSlice } from '@reduxjs/toolkit'\nimport axiosDefault from '../config/axios'\n\nexport const getCharacter = createAsyncThunk(\n    'user/getCharacter',\n    async (characterId, { rejectWithValue }) => {\n        try {\n            const response = await axiosDefault.get(\n                `/armories/characters/${characterId}`\n            )\n            return response.data\n        } catch (error) {\n            if (!error.response) {\n                throw error.message // Network error 에러메시지가 없으므로 네트워크 에러\n            }\n            return rejectWithValue(error.response) // Server error\n        }\n    }\n)\n\nexport const characterSlice = createSlice({\n    name: 'character',\n    initialState: {\n        characterProfile: {},\n    },\n    extraReducers: (builder) => {\n        builder.addCase(getCharacter.fulfilled, (state, action) => {\n            state.characterProfile = action.payload\n        })\n    },\n})\n\nexport default characterSlice.reducer\n"],"mappings":"AAAA,SAASA,gBAAgB,EAAEC,WAAW,QAAQ,kBAAkB;AAChE,OAAOC,YAAY,MAAM,iBAAiB;AAE1C,OAAO,MAAMC,YAAY,GAAGH,gBAAgB,CACxC,mBAAmB,EACnB,OAAOI,WAAW,EAAE;EAAEC;AAAgB,CAAC,KAAK;EACxC,IAAI;IACA,MAAMC,QAAQ,GAAG,MAAMJ,YAAY,CAACK,GAAG,CACnC,wBAAwBH,WAAW,EACvC,CAAC;IACD,OAAOE,QAAQ,CAACE,IAAI;EACxB,CAAC,CAAC,OAAOC,KAAK,EAAE;IACZ,IAAI,CAACA,KAAK,CAACH,QAAQ,EAAE;MACjB,MAAMG,KAAK,CAACC,OAAO,EAAC;IACxB;IACA,OAAOL,eAAe,CAACI,KAAK,CAACH,QAAQ,CAAC,EAAC;EAC3C;AACJ,CACJ,CAAC;AAED,OAAO,MAAMK,cAAc,GAAGV,WAAW,CAAC;EACtCW,IAAI,EAAE,WAAW;EACjBC,YAAY,EAAE;IACVC,gBAAgB,EAAE,CAAC;EACvB,CAAC;EACDC,aAAa,EAAGC,OAAO,IAAK;IACxBA,OAAO,CAACC,OAAO,CAACd,YAAY,CAACe,SAAS,EAAE,CAACC,KAAK,EAAEC,MAAM,KAAK;MACvDD,KAAK,CAACL,gBAAgB,GAAGM,MAAM,CAACC,OAAO;IAC3C,CAAC,CAAC;EACN;AACJ,CAAC,CAAC;AAEF,eAAeV,cAAc,CAACW,OAAO","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}